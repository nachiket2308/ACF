<apex:page controller="Spreadsheet_V1_SController" sidebar="false">
    <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js" />
<!--     <apex:includeScript value="//cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.17.8/js/jquery.tablesorter.min.js" /> -->
<!--     <apex:includeScript value="//cdnjs.cloudflare.com/ajax/libs/jquery.blockUI/2.66.0-2013.10.09/jquery.blockUI.min.js" /> -->
<!--     <apex:stylesheet value="//cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.17.8/css/theme.blue.css" /> -->
    <!-- Css applied on the page -->
    <style>
        .hide {
            display: none;
        }

        #sObjectRecordDisplayTable, .datatableHeader, .dataTableCell {
            border: solid 1px #B9B3B3;
            padding: .3%;
            border-collapse: collapse;
        }

        .datatableHeader{
            background-color: #EAE9E9;
        }

        .sObjectRecordDisplayDiv{
            margin-top: 2%;
        }

        .inputFieldClass{
            width: 99%;
        }

        .dateFormat{
            display:none;
        }

        .listViewPresentation{
            text-decoration: initial;
        }
    </style>

    <apex:form id="theForm">
        <apex:actionStatus id="activeLoading" >
            <apex:facet name="start" >
              <img src="/img/loading.gif" width="20px" height="20px"/>
            </apex:facet>
        </apex:actionStatus>
        <apex:variable var="i" value="{!1}"/>

        <apex:actionFunction name="deleteSelected"
                                immediate="true" action="{!deleteSelected}" reRender="recordDisplayPanel, errorMessages"  
                                oncomplete="bindDataSorterTosObjectRecordDisplayTable(), bindClickEventonTableCell()">
            <apex:param value="" assignTo="{!rowNumbersToDelete}" name="rowsToDel"/>
        </apex:actionFunction>

        <!-- List view presentation  -->
        <apex:selectList value="{!selectedListView}" >
            <apex:selectOptions value="{!listViewOptions}" />     
        </apex:selectList>&nbsp;&nbsp;
        <apex:commandLink styleClass="listViewPresentation" immediate="true"> Edit </apex:commandLink>
        &nbsp;<apex:outputText value="|"/> &nbsp;
        <apex:commandLink styleClass="listViewPresentation" immediate="true"> Delete </apex:commandLink>
        &nbsp;<apex:outputText value="|"/> &nbsp;
        <apex:commandLink styleClass="listViewPresentation" action="{!redirectToListViewFilter}" immediate="true"> Create List View </apex:commandLink>
        <!-- list view presentation ends here -->

        <apex:outputpanel id="errorMessages"><apex:pageMessages /></apex:outputpanel>         
        <!--This panel is for displaying the records from the sObject -->
        <apex:outputpanel id="recordDisplayPanel" rendered="{!sObjectRecordList.size!=0}">
            <div class="sObjectRecordDisplayDiv">
                <table id="sObjectRecordDisplayTable" style="width: 100%" border="">
                    <thead >
                        <tr>
                            <th class="datatableHeader" >
                                <apex:inputCheckbox value="{!isAllSelected}" id="selectAll" onChange="toggleSelectAll(this)"/>
                            </th>
                            <th class="datatableHeader"></th>
                            <apex:repeat value="{!fieldsSObjectMap}"
                                            var="sObjectField">
                                <th class="datatableHeader" >
                                    <span> {!fieldsSObjectMap[sObjectField]} </span>
                                    <span> </span>
                                </th>
                            </apex:repeat>
                        </tr>
                    </thead>
                    <tbody>
                        <apex:repeat value="{!sObjectRecordList}" var="sObjectObj">
                            <tr id="{!sObjectObj.record['id']}">
                                <td class="dataTableCell">
                                   <apex:inputCheckbox value="{!sObjectObj.isSelected}" styleClass="recordCb" onChange="toggleSelectAllCheckbox()"/>
                                </td>
                                <td class="dataTableCell">
                                    <apex:commandLink action="{!save}"  status="activeLoading" value="Save" id="theCommandLink" styleClass="saveLinkClass" 
                                                        rerender="recordDisplayPanel,errorMessages" 
                                                        oncomplete="bindClickEventonTableCell()">
                                        <apex:param name="currentRowNumber" value="{!sObjectObj.rowCounter}"/>
                                    </apex:commandLink>
                                </td>
                                <apex:repeat value="{!fieldsSObjectMap}"
                                    var="sObjectField">
                                    <td class="dataTableCell" tabindex = "{!i}">   
                                        <div class="outputFieldDiv">
                                            <apex:outputfield styleClass="outputFieldClass" value="{!sObjectObj.record[sObjectField]}"/>
                                        </div>
                                        <div class="inputFieldDiv hide">
                                            <apex:inputHidden value="{!sObjectObj.rowCounter}"/>
                                            <apex:inputfield styleClass="inputFieldClass"  value="{!sObjectObj.record[sObjectField]}"/>
                                        </div>
                                    </td>
                                    <apex:variable var="i" value="{!i+1}"/>
                                </apex:repeat>
                            </tr>
                        </apex:repeat>
                    </tbody>
                </table>
            </div>
            <!-- Buttons for pagination -->
            <div align = 'center'>
                <apex:panelGrid columns="7"  rendered = "{!AND(sObjectRecordList != null, sObjectRecordList.size > 0)}" >
                    <apex:commandButton immediate="true" status="activeLoading" reRender="recordDisplayPanel,errorMessages" 
                                        disabled="{!currentPageNo==1}" value="First" action="{!first}"  
                                        oncomplete="bindClickEventonTableCell()" />
                    <apex:commandButton immediate="true" status="activeLoading" reRender="recordDisplayPanel,errorMessages" 
                                        disabled="{!currentPageNo==1}" value="Previous" action="{!previous}"  
                                        oncomplete="bindClickEventonTableCell()"/>
                    <apex:commandButton immediate="true" status="activeLoading" reRender="recordDisplayPanel,errorMessages"
                                        disabled="{!currentPageNo==lastPageNo}" value="Next" action="{!next}"
                                        oncomplete="bindClickEventonTableCell()"/>
                    <apex:commandButton immediate="true" status="activeLoading" reRender="recordDisplayPanel,errorMessages" 
                                        disabled="{!currentPageNo==lastPageNo}" value="Last" action="{!last}"
                                        oncomplete="bindClickEventonTableCell()"/>
                </apex:panelGrid>
            </div>
            <div align = 'center'>
                <apex:commandButton immediate="true" 
                                    value="Add New Row" action="{!addNewRecord}" reRender="recordDisplayPanel" 
                                    oncomplete="bindClickEventonTableCell()"/>
                <apex:commandButton action="{!savePage}" status="activeLoading" value="Save Page Records" 
                                    reRender="recordDisplayPanel,errorMessages" id="savePage" styleClass="saveLinkClass" 
                                    oncomplete="bindClickEventonTableCell()"/>  
                <apex:commandButton immediate="true" status="activeLoading"  value="Delete Selected Records" id="deleteSelected" 
                                    styleClass="saveLinkClass" onclick="deleteSelectedRecords(); return false;"
                                    oncomplete="bindClickEventonTableCell()"/>
            </div>
        </apex:outputpanel>
    </apex:form>
    <script>
        $j = jQuery.noConflict();

        $j(document).ready(function() {
            //blockPage();
            //bindDataSorterTosObjectRecordDisplayTable();
            bindClickEventonTableCell();
            bindClickEventOnRow();
        });

        //Applies the CDN jquery to the sObject records table 
        /*function bindDataSorterTosObjectRecordDisplayTable() { 
            $j("[id$='sObjectRecordDisplayTable']").tablesorter({theme: 'blue'});
        }*/

        //Gets the click event on the table and opens the inputfield on click event. 
        function bindClickEventonTableCell() {
            console.log('This is bindClickEventonTableCell JS function===>>>> ');
            $j("#sObjectRecordDisplayTable tbody td").focusin(function(e) {
               console.log('Cell was clicked');
               var currentThis = $j(this);
               $j('.outputFieldDiv').removeClass('hide');
               $j('.inputFieldDiv').addClass('hide');
               var hasHide = $j(this).find('.inputFieldDiv').hasClass('hide');
               if(hasHide) {
                   $j(this).find('.outputFieldDiv').addClass('hide');
                   $j(this).find('.inputFieldDiv').removeClass('hide');
                }
                 //Holds the current value of the cell and displays that instead of previous value. 
                $j(this).find('input').change(function(){
                   $j(currentThis).find('span').text($j(this).val());
                }); 
            });
        }

        //Function to get the id stored in the tr tags Id attribute on click 
        function bindClickEventOnRow() {
            $j('.saveLinkClass').click(function(){
                event.preventDefault();
                var recordId = $j(this).closest('tr').attr("id");
                console.log('----recordId-----'+recordId);
                //recordIdToSave(recordId);
                console.log('----sldjkfbklsdjbfkdjs-----');
                return false;
            });
        }

        //function to block the whole page  
        /*function blockPage() {   
            $j.blockUI({ message: '<img src="/img/loading32.gif" /><h1> Loading...</h1>',   
                css: {   
                    border: 'none',   
                    padding: '15px',   
                    '-webkit-border-radius': '10px',   
                    '-moz-border-radius': '10px',   
                    opacity: .9  
                }   
            });   
            return false;  
        }  */

       /* window.onload = function(event) {
            //unblockPage();
        }*/

        //function to unblock the page  
       /* function unblockPage() {  
            //$j.unblockUI();  
        }*/

        //Function to capture Ctrl + Save event 
        $j().keypress(function(event) {
            event.preventDefault();
            if (!(event.which == 115 && event.ctrlKey) && !(event.which == 19)) return true;
              alert("Ctrl-S pressed");
            return false;
        }); 

        //function to select or deselect all checkboxes
        function toggleSelectAll(checkbox) {
            if(checkbox.checked){
                $j(".recordCb").prop('checked',true);
            }
            else{
                $j(".recordCb").prop('checked',false);
            }
        }

        var hiddenRowNumbers;               
        function toggleSelectAllCheckbox() {
            hiddenRowNumbers = '';
            var cb = $j(".recordCb");
            if(cb.filter(':not(:checked)').length==0){ //if all none of the checkbox is unchecked
                $j("input[id$=selectAll]").prop('checked', true);
            } else {
                $j("input[id$=selectAll]").prop('checked', false);
            }
        } 

        //Function to call remote action for deleting selected records 
        function deleteSelectedRecords() {
           hiddenRowNumbers = '';            
           $j("input:checked").each(function () {
               if($j(this).is(':checked')){
                   hiddenRowNumbers += $j(this).parent().parent().find("input[type='hidden']").val() + ',';
                   $j(this).closest('tr').remove();
               }
           });        
           alert(hiddenRowNumbers);
           deleteSelected(hiddenRowNumbers);      
        }                             
    </script>
</apex:page>